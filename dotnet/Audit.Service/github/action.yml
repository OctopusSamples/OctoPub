name: 'GitHub Actions Backend'
inputs:
  run_number:
    description: The github run number
    required: true
  github_token:
    description: The github token
    required: true
  github_user:
    description: The github username
    required: true
description: Build the audit microservice
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v1

    - uses: nelonoel/branch-name@v1.0.1

    - name: Install Octopus CLI
      uses: OctopusDeploy/install-octopus-cli-action@v1.1.1
      with:
        version: latest

    - name: Set up DotNET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.100

    - name: Install AWS Tooling
      run: dotnet tool install -g Amazon.Lambda.Tools
      shell: bash

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: 5.x

    - id: determine_version
      name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.7

    - name: Install Dependencies
      run: dotnet restore
      shell: bash
      working-directory: dotnet/Audit.Service

    - name: List Dependencies
      run: dotnet list package > dependencies.txt
      shell: bash
      working-directory: dotnet/Audit.Service

    - name: Collect Dependencies
      uses: actions/upload-artifact@v2
      with:
        name: Dependencies
        path: dotnet/Audit.Service/dependencies.txt

    - name: List Dependency Updates
      run: dotnet list package --outdated > dependencyUpdates.txt
      shell: bash
      working-directory: dotnet/Audit.Service

    - name: Collect Dependency Updates
      uses: actions/upload-artifact@v2
      with:
        name: Dependencies Updates
        path: dotnet/Audit.Service/dependencyUpdates.txt

    - name: Test
      run: dotnet test -l:trx || true
      shell: bash
      working-directory: dotnet

    - if: always()
      name: Report
      uses: dorny/test-reporter@v1
      with:
        name: DotNET Tests
        path: 'dotnet/Audit.Service.Tests/**/*.trx'
        reporter: dotnet-trx
        fail-on-error: 'false'

    - name: Publish
      run: dotnet publish --configuration Release /p:AssemblyVersion=${{ steps.determine_version.outputs.semVer }}.${{ github.run_number }} /p:GenerateRuntimeConfigurationFiles=true --runtime linux-x64
      shell: bash
      working-directory: dotnet/Audit.Service

    - id: package
      name: Package
      run: dotnet lambda package
      shell: bash
      working-directory: dotnet/Audit.Service

    - run: >
        mvn deploy:deploy-file
        -Dfile=bin/Release/netcoreapp3.1/Audit.Service.zip
        -DgroupId=com.octopus.octopub
        -DartifactId=audits-service
        -Dversion=${{ steps.determine_version.outputs.semVer }}.${{ github.run_number }}
        -Dpackaging=zip
        -Durl="https://${{ inputs.github_user }}:${{ inputs.github_token }}@maven.pkg.github.com/mcasperson/OctoPub"
      shell: bash
      working-directory: dotnet/Audit.Service